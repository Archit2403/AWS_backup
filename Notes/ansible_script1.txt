---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: installing docker
     ansible.builtin.dnf:
      name: docker
      state: absent
      autoremove: true


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: restart a particular instance by its ID
     amazon.aws.ec2_instance:
      state: restarted
      instance_ids:
       i-0374b2fbdf2b6ab8e
	   
	   



copy.yml

---
 - hosts: webserver
   remote_user: ec2-user
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Copy file with owner and permissions
     copy:
      src: /home/ec2-user/ansible-playbooks/yum_update.yml
      dest: /home/ec2-user/yum-up.yml
      owner: ec2-user
      group: ec2-user
      mode: '0644'


--------------------------------------------------------------------------------------
dnf_update.yml

---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: installing docker
     ansible.builtin.dnf:
      name: docker
      state: absent
      autoremove: true

-------------------------------------------------------------------------------------
ec2-instance_start.yml

---
 - hosts: webserver
   #remote_user: ec2-user
   #become: yes
   #become_method: sudo
   #gather_facts: yes
   #connection: ssh

   tasks:
   - name: Gather facts
     action: ec2_facts

   - name: restart a particular instance by its ID
     #amazon.aws.ec2_instance:
     #state: restarted
     #instance_ids:
     # i-0374b2fbdf2b6ab8e
     local_action:
       module: ec2
       region: ap-south-1
       instance_ids :
         - i-0374b2fbdf2b6ab8e
       state: stopped
------------------------------------------------------------------------------------------
ec2-instance_stop.yml


---
 - hosts: webserver
   #remote_user: ec2-user
   #become: yes
   #become_method: sudo
   #gather_facts: yes
   #connection: ssh

   tasks:
   - name: Gather facts
     action: ec2_facts

   - name: restart a particular instance by its ID
     #amazon.aws.ec2_instance:
     #state: restarted
     #instance_ids:
     # i-0374b2fbdf2b6ab8e
     local_action:
       module: ec2
       region: ap-south-1
       instance_ids :
         - i-0374b2fbdf2b6ab8e
       state: stopped

--------------------------------------------------------------------------------------------
group_creation.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Delete group
     ansible.builtin.group:
      name: testing
      state: present

----------------------------------------------------------------------------------------------
group_deletion.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Delete group
     ansible.builtin.group:
      name: testing
      state: absent
------------------------------------------------------------------------------------------------
local_action.yml

---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Gather facts
     action: ec2_facts

   - name: Stop my servers
     local_action:
       module: ec2
       region: ap-south-1
       instance_ids: [i-0374b2fbdf2b6ab8e]
       state: stopped


---------------------------------------------------------------------------------------------------
recover.yml

---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Install the latest version of docker
     ansible.builtin.yum:
      name: docker
      state: present

-----------------------------------------------------------------------------------------------
service_httpd_state.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: restart httpd service(note-httpd must be install in slave nodes)
     ansible.builtin.service:
      name: httpd
      state: started
   tasks:
   - name: restart httpd service(note-httpd must be install in slave nodes)
     ansible.builtin.service:
      name: httpd
      state: enable
   tasks:
   - name: restart httpd service(note-httpd must be install in slave nodes)
     ansible.builtin.service:
      name: httpd
      state:
-------------------------------------------------------------------------------------------------
service_network_state.yml

---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: restart httpd service(note-httpd must be install in slave nodes)
     ansible.builtin.service:
      name: network
      state: restarted
      args: eth0


--------------------------------------------------------------------------------------------------
service_sshd_state.yml


---
- hosts: webserver
  remote_user: ec2-user
  become: yes
  tasks:
  - name: start sshd service
    service:
     name: sshd
     state: restarted
------------------------------------------------------------------------------------------------
stop-instances1.yml

- name: Stop instances
  hosts: webserver
  connection: ssh
  gather_facts: false
  vars:
    ami: 'ami-07d3a50bd29811cd1'
    region: 'ap-south-1'
    instance:
      - 'i-0374b2fbdf2b6ab8e'
  tasks:
    - amazon.aws.ec2_instance:
       aws_access_key: "AKIA2MDYVMKDIVNMINJJ"
       aws_secret_key: "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"
       instance_ids: "{{ instance }}"
       state: 'stopped'
       wait: yes
       region: "{{ region }}"
         #handlers:
         #- name: Instance terminated
         #debug:
         #msg: Instance killed
--------------------------------------------------------------------------------------------------
user_creation.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: create user testing to remote user
     ansible.builtin.user:
      name: Arun
      uid: 2005
      group: testing
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_bits: 2048
---------------------------------------------------------------------------------------------------
user_deletion.yml

---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: create user testing to remote user
     ansible.builtin.user:
      name: test
      state: absent
      remove: yes



---------------------------------------------------------------------------------------------------
yum-2.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: installing docker
     ansible.builtin.raw:
      name: docker
      state: latest
-------------------------------------------------------------------------------------------------
yum_update.yml


---
 - hosts: webserver
   remote_user: ec2-user
   become: yes
   become_method: sudo
   gather_facts: yes
   connection: ssh

   tasks:
   - name: Install the latest version of docker
     ansible.builtin.yum:
      name: docker
      state: present
